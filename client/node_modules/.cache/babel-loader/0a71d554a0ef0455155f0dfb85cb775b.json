{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder (2)\\\\[FreeCourseSite.com] Udemy -MERN Stack Front To Back Full Stack React, Redux & Node.js\\\\devconnector_S2\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport ProfileTop from './ProfileTop';\nimport ProfileAbout from './ProfileAbout';\nimport ProfileExperience from './ProfileExperience';\nimport ProfileEducation from './ProfileEducation';\nimport { Link } from 'react-router-dom';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById, match.params.id]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, profile === null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }\n  }, \"Back To Profiles\"), auth.isAuthenticated && auth.loading === false && auth.user._id === profile.user._id && /*#__PURE__*/React.createElement(Link, {\n    to: \"/edit-profile\",\n    className: \"btn btn-dark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }\n  }, \"Edit Profile\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"profile-grid my-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ProfileTop, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ProfileAbout, {\n    profile: profile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-exp bg-white p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, \"Experience\"), profile.experience.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 59\n    }\n  }, profile.experience.map(experience => /*#__PURE__*/React.createElement(ProfileExperience, {\n    key: experience._id,\n    experience: experience,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 41\n    }\n  }, \"No Experience credentials\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"profile-edu bg-white p-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 25\n    }\n  }, \"Education\"), profile.education.length > 0 ? /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 58\n    }\n  }, profile.education.map(education => /*#__PURE__*/React.createElement(Profileeducation, {\n    key: education._id,\n    education: education,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  }))) : /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 41\n    }\n  }, \"No education credentials\")))));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["E:/New folder (2)/[FreeCourseSite.com] Udemy -MERN Stack Front To Back Full Stack React, Redux & Node.js/devconnector_S2/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","ProfileTop","ProfileAbout","ProfileExperience","ProfileEducation","Link","Profile","profile","loading","auth","match","params","id","isAuthenticated","user","_id","experience","length","map","education","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, {Fragment, useEffect} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport {getProfileById} from '../../actions/profile';\r\nimport ProfileTop from './ProfileTop';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileExperience from './ProfileExperience';\r\nimport ProfileEducation from './ProfileEducation';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Profile = ({ getProfileById,profile: {profile, loading}, auth, match }) => {\r\n    useEffect(() => {\r\n        getProfileById(match.params.id);\r\n    }, [getProfileById, match.params.id]);\r\n    return (\r\n        <Fragment>\r\n            {profile === null || loading ? (\r\n                    <Spinner />\r\n                ) : (\r\n                <Fragment>\r\n                    <Link to='/profiles' className=\"btn btn-light\">\r\n                        Back To Profiles\r\n                    </Link>\r\n                    {auth.isAuthenticated && \r\n                        auth.loading === false && \r\n                        auth.user._id === profile.user._id && (\r\n                            <Link to='/edit-profile' className='btn btn-dark'>\r\n                                Edit Profile\r\n                            </Link>\r\n                    )}\r\n                <div class=\"profile-grid my-1\">\r\n                    <ProfileTop profile={profile} />\r\n                    <ProfileAbout profile={profile} />\r\n                    <div className=\"profile-exp bg-white p-2\">\r\n                        <h2 className=\"text-primary\">Experience</h2>\r\n                        {profile.experience.length > 0 ? (<Fragment>\r\n                            {profile.experience.map(experience => (\r\n                                <ProfileExperience key={experience._id} experience={experience} />\r\n                            ))}\r\n                        </Fragment>) : (<h4>No Experience credentials</h4>)}\r\n                    </div>\r\n                    <div className=\"profile-edu bg-white p-2\">\r\n                        <h2 className=\"text-primary\">Education</h2>\r\n                        {profile.education.length > 0 ? (<Fragment>\r\n                            {profile.education.map(education => (\r\n                                <Profileeducation key={education._id} education={education} />\r\n                            ))}\r\n                        </Fragment>) : (<h4>No education credentials</h4>)}\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n            )}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth \r\n});\r\nexport default connect(mapStateToProps, {getProfileById})(Profile);\r\n"]},"metadata":{},"sourceType":"module"}