{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder (2)\\\\[FreeCourseSite.com] Udemy -MERN Stack Front To Back Full Stack React, Redux & Node.js\\\\devconnector_S2\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getCurrentProfile } from '../../actions/profile';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  auth,\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile == null ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 41\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 55\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    class: \"large text-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, \"Dashboard\"), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"lead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fas fa-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }), \" Welcome \", user && user.name));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile\n})(Dashboard);","map":{"version":3,"sources":["E:/New folder (2)/[FreeCourseSite.com] Udemy -MERN Stack Front To Back Full Stack React, Redux & Node.js/devconnector_S2/client/src/components/dashboard/Dashboard.js"],"names":["React","useEffect","Fragment","PropTypes","connect","Spinner","getCurrentProfile","Dashboard","auth","profile","loading","user","name","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACD,EAAAA,iBAAD;AAAoBE,EAAAA,IAApB;AAA0BC,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV;AAAnC,CAAD,KAA4D;AAC1ET,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,iBAAiB;AACpB,GAFQ,EAEP,EAFO,CAAT;AAGA,SAAOI,OAAO,IAAID,OAAO,IAAI,IAAtB,gBAA6B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B,gBAA2C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAClD;AAAI,IAAA,KAAK,EAAC,oBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADkD,eAIlD;AAAG,IAAA,KAAK,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAgB;AAAG,IAAA,KAAK,EAAC,aAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,eAAqDE,IAAI,IAAIA,IAAI,CAACC,IAAlE,CAJkD,CAAlD;AAQH,CAZD;;AAcAL,SAAS,CAACM,SAAV,GAAsB;AAClBP,EAAAA,iBAAiB,EAAEH,SAAS,CAACW,IAAV,CAAeC,UADhB;AAElBP,EAAAA,IAAI,EAAEL,SAAS,CAACa,MAAV,CAAiBD,UAFL;AAGlBN,EAAAA,OAAO,EAAEN,SAAS,CAACa,MAAV,CAAiBD;AAHR,CAAtB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BV,EAAAA,IAAI,EAAEU,KAAK,CAACV,IADkB;AAE9BC,EAAAA,OAAO,EAAES,KAAK,CAACT;AAFe,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACa,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CAAgDC,SAAhD,CAAf","sourcesContent":["import React, {useEffect, Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport {getCurrentProfile} from '../../actions/profile';\r\n\r\nconst Dashboard = ({getCurrentProfile, auth, profile: {profile, loading}}) => {\r\n    useEffect(() => {\r\n        getCurrentProfile();\r\n    },[]);\r\n    return loading && profile == null ? <Spinner /> : <Fragment>\r\n    <h1 class=\"large text-primary\">\r\n        Dashboard\r\n    </h1>\r\n    <p class=\"lead\"><i class=\"fas fa-user\"></i> Welcome {user && user.name}</p>\r\n\r\n    </Fragment>;\r\n    \r\n};\r\n\r\nDashboard.propTypes = {\r\n    getCurrentProfile: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    profile: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    profile: state.profile\r\n});\r\nexport default connect(mapStateToProps, { getCurrentProfile })(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}