{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder (2)\\\\[FreeCourseSite.com] Udemy -MERN Stack Front To Back Full Stack React, Redux & Node.js\\\\devconnector_S2\\\\client\\\\src\\\\components\\\\profile\\\\Profile.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfileById } from '../../actions/profile';\nimport { Link } from 'react-router-dom';\n\nconst Profile = ({\n  getProfileById,\n  profile: {\n    profile,\n    loading\n  },\n  auth,\n  match\n}) => {\n  useEffect(() => {\n    getProfileById(match.params.id);\n  }, [getProfileById]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, profile === null || loading ? /*#__PURE__*/React.createElement(Spinner, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 44\n    }\n  }) : /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 58\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/profiles\",\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  })));\n};\n\nProfile.propTypes = {\n  getProfileById: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  getProfileById\n})(Profile);","map":{"version":3,"sources":["E:/New folder (2)/[FreeCourseSite.com] Udemy -MERN Stack Front To Back Full Stack React, Redux & Node.js/devconnector_S2/client/src/components/profile/Profile.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Spinner","getProfileById","Link","Profile","profile","loading","auth","match","params","id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAAQC,cAAR,QAA6B,uBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEF,EAAAA,cAAF;AAAiBG,EAAAA,OAAO,EAAE;AAACA,IAAAA,OAAD;AAAUC,IAAAA;AAAV,GAA1B;AAA8CC,EAAAA,IAA9C;AAAoDC,EAAAA;AAApD,CAAD,KAAiE;AAC7EV,EAAAA,SAAS,CAAC,MAAM;AACZI,IAAAA,cAAc,CAACM,KAAK,CAACC,MAAN,CAAaC,EAAd,CAAd;AACH,GAFQ,EAEP,CAACR,cAAD,CAFO,CAAT;AAGA,sBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKG,OAAO,KAAK,IAAZ,IAAoBC,OAApB,gBAA8B,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA9B,gBAA4C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACzC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAqB,IAAA,SAAS,EAAC,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADyC,CADjD,CADJ;AAOH,CAXD;;AAaAF,OAAO,CAACO,SAAR,GAAoB;AAChBT,EAAAA,cAAc,EAAEH,SAAS,CAACa,IAAV,CAAeC,UADf;AAEhBR,EAAAA,OAAO,EAAEN,SAAS,CAACe,MAAV,CAAiBD,UAFV;AAGhBN,EAAAA,IAAI,EAAER,SAAS,CAACe,MAAV,CAAiBD;AAHP,CAApB;;AAKA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BX,EAAAA,OAAO,EAAEW,KAAK,CAACX,OADe;AAE9BE,EAAAA,IAAI,EAAES,KAAK,CAACT;AAFkB,CAAL,CAA7B;;AAIA,eAAeP,OAAO,CAACe,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAA2CE,OAA3C,CAAf","sourcesContent":["import React, {Fragment, useEffect} from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport {getProfileById} from '../../actions/profile';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Profile = ({ getProfileById,profile: {profile, loading}, auth, match }) => {\r\n    useEffect(() => {\r\n        getProfileById(match.params.id)\r\n    },[getProfileById]);\r\n    return (\r\n        <Fragment>\r\n            {profile === null || loading ? <Spinner /> : <Fragment>\r\n                <Link to='/profiles' className=\"btn btn-light\"></Link>\r\n            </Fragment>}\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nProfile.propTypes = {\r\n    getProfileById: PropTypes.func.isRequired,\r\n    profile: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n    profile: state.profile,\r\n    auth: state.auth \r\n});\r\nexport default connect(mapStateToProps, {getProfileById})(Profile);\r\n"]},"metadata":{},"sourceType":"module"}