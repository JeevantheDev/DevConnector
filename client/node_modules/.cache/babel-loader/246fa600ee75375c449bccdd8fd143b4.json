{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder (2)\\\\[FreeCourseSite.com] Udemy -MERN Stack Front To Back Full Stack React, Redux & Node.js\\\\devconnector_S2\\\\client\\\\src\\\\components\\\\posts\\\\PostItem.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\n\nconst PostItem = ({\n  addLike,\n  removeLike,\n  auth,\n  post: {\n    _id,\n    text,\n    name,\n    avatar,\n    user,\n    likes,\n    comments,\n    date\n  }\n}) => /*#__PURE__*/React.createElement(\"div\", {\n  className: \"post bg-white p-1 my-1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 8\n  }\n}, /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"a\", {\n  href: \"profile.html\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"img\", {\n  className: \"round-img\",\n  src: avatar,\n  alt: \"\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 15\n  }\n}), /*#__PURE__*/React.createElement(\"h4\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 15\n  }\n}, name))), /*#__PURE__*/React.createElement(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 11\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  className: \"my-1\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 13\n  }\n}, text), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"post-date\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 14\n  }\n}, \"Posted on \", /*#__PURE__*/React.createElement(Moment, {\n  format: \"YYYY/MM/DD\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 27\n  }\n}, date)), /*#__PURE__*/React.createElement(\"button\", {\n  onClick: e => addLike(_id),\n  type: \"button\",\n  className: \"btn btn-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fas fa-thumbs-up\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 15\n  }\n}), \" \", ' ', /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 15\n  }\n}, \" \", likes.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 17\n  }\n}, likes.length))), /*#__PURE__*/React.createElement(\"button\", {\n  onClick: e => removeLike(_id),\n  type: \"button\",\n  className: \"btn btn-light\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fas fa-thumbs-down\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 15\n  }\n})), /*#__PURE__*/React.createElement(Link, {\n  to: `/post/${_id}`,\n  className: \"btn btn-primary\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 13\n  }\n}, \"Discussion \", comments.length > 0 && /*#__PURE__*/React.createElement(\"span\", {\n  className: \"comment-count\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 17\n  }\n}, \" \", comments.length)), !auth.loading && user === auth.user._id && /*#__PURE__*/React.createElement(\"button\", {\n  onClick: e => deletePost(_id),\n  type: \"button\",\n  className: \"btn btn-danger\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"i\", {\n  className: \"fas fa-times\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 21\n  }\n}))));\n\nPostItem.propTypes = {\n  post: PropTypes.object.isRequired,\n  auth: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost\n})(PostItem);","map":{"version":3,"sources":["E:/New folder (2)/[FreeCourseSite.com] Udemy -MERN Stack Front To Back Full Stack React, Redux & Node.js/devconnector_S2/client/src/components/posts/PostItem.js"],"names":["React","Fragment","PropTypes","Link","connect","Moment","addLike","removeLike","deletePost","PostItem","auth","post","_id","text","name","avatar","user","likes","comments","date","e","length","loading","propTypes","object","isRequired","func","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,OAAR,EAAiBC,UAAjB,EAA6BC,UAA7B,QAA8C,oBAA9C;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AACdH,EAAAA,OADc;AAEdC,EAAAA,UAFc;AAGdG,EAAAA,IAHc;AAIdC,EAAAA,IAAI,EAAE;AAACC,IAAAA,GAAD;AAAMC,IAAAA,IAAN;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,MAAlB;AAA0BC,IAAAA,IAA1B;AAAgCC,IAAAA,KAAhC;AAAuCC,IAAAA,QAAvC;AAAiDC,IAAAA;AAAjD;AAJQ,CAAD,kBAKV;AAAK,EAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAG,EAAA,IAAI,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AACE,EAAA,SAAS,EAAC,WADZ;AAEE,EAAA,GAAG,EAAEJ,MAFP;AAGE,EAAA,GAAG,EAAC,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKD,IAAL,CANF,CADF,CADH,eAWG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAG,EAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,IADH,CADF,eAIG;AAAG,EAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACa,oBAAC,MAAD;AAAQ,EAAA,MAAM,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA6BM,IAA7B,CADb,CAJH,eAOE;AAAQ,EAAA,OAAO,EAAEC,CAAC,IAAId,OAAO,CAACM,GAAD,CAA7B;AAAoC,EAAA,IAAI,EAAC,QAAzC;AAAkD,EAAA,SAAS,EAAC,eAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAG,EAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,OACwC,GADxC,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAQK,KAAK,CAACI,MAAN,GAAe,CAAf,iBACN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAOJ,KAAK,CAACI,MAAb,CADF,CAFF,CAPF,eAaE;AAAQ,EAAA,OAAO,EAAED,CAAC,IAAIb,UAAU,CAACK,GAAD,CAAhC;AAAuC,EAAA,IAAI,EAAC,QAA5C;AAAqD,EAAA,SAAS,EAAC,eAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAG,EAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAbF,eAgBE,oBAAC,IAAD;AAAM,EAAA,EAAE,EAAG,SAAQA,GAAI,EAAvB;AAA0B,EAAA,SAAS,EAAC,iBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACcM,QAAQ,CAACG,MAAT,GAAkB,CAAlB,iBACV;AAAM,EAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAkCH,QAAQ,CAACG,MAA3C,CAFJ,CAhBF,EAqBG,CAACX,IAAI,CAACY,OAAN,IAAiBN,IAAI,KAAKN,IAAI,CAACM,IAAL,CAAUJ,GAApC,iBACG;AAAQ,EAAA,OAAO,EAAEQ,CAAC,IAAIZ,UAAU,CAACI,GAAD,CAAhC;AACA,EAAA,IAAI,EAAC,QADL;AAEA,EAAA,SAAS,EAAC,gBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAGI;AAAG,EAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAHJ,CAtBN,CAXH,CALP;;AA+CAH,QAAQ,CAACc,SAAT,GAAqB;AACjBZ,EAAAA,IAAI,EAAET,SAAS,CAACsB,MAAV,CAAiBC,UADN;AAEjBf,EAAAA,IAAI,EAAER,SAAS,CAACsB,MAAV,CAAiBC,UAFN;AAGjBnB,EAAAA,OAAO,EAAEJ,SAAS,CAACwB,IAAV,CAAeD,UAHP;AAIjBlB,EAAAA,UAAU,EAAEL,SAAS,CAACwB,IAAV,CAAeD,UAJV;AAKjBjB,EAAAA,UAAU,EAAEN,SAAS,CAACwB,IAAV,CAAeD;AALV,CAArB;;AAOA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC9BlB,EAAAA,IAAI,EAAEkB,KAAK,CAAClB;AADkB,CAAL,CAA7B;;AAIA,eAAeN,OAAO,CAACuB,eAAD,EAAkB;AAACrB,EAAAA,OAAD;AAAUC,EAAAA,UAAV;AAAsBC,EAAAA;AAAtB,CAAlB,CAAP,CAA4DC,QAA5D,CAAf","sourcesContent":["import React, {Fragment} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Moment from 'react-moment';\r\nimport {addLike, removeLike, deletePost} from '../../actions/post';\r\n\r\nconst PostItem = ({\r\n    addLike,\r\n    removeLike,\r\n    auth, \r\n    post: {_id, text, name, avatar, user, likes, comments, date}\r\n}) =>  <div className=\"post bg-white p-1 my-1\">\r\n          <div>\r\n            <a href=\"profile.html\">\r\n              <img\r\n                className=\"round-img\"\r\n                src={avatar}\r\n                alt=\"\"\r\n              />\r\n              <h4>{name}</h4>\r\n            </a>\r\n          </div>\r\n          <div>\r\n            <p className=\"my-1\">\r\n              {text}\r\n            </p>\r\n             <p className=\"post-date\">\r\n                Posted on <Moment format='YYYY/MM/DD'>{date}</Moment> \r\n            </p>\r\n            <button onClick={e => addLike(_id)} type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"fas fa-thumbs-up\"></i> {' '}\r\n              <span> {likes.length > 0 && (\r\n                <span>{likes.length}</span>\r\n              )}</span>\r\n            </button>\r\n            <button onClick={e => removeLike(_id)} type=\"button\" className=\"btn btn-light\">\r\n              <i className=\"fas fa-thumbs-down\"></i>\r\n            </button>\r\n            <Link to={`/post/${_id}`} className=\"btn btn-primary\">\r\n              Discussion {comments.length > 0 && (\r\n                <span className='comment-count'> {comments.length}</span>\r\n              )}\r\n            </Link>\r\n            {!auth.loading && user === auth.user._id && (\r\n                <button onClick={e => deletePost(_id)}     \r\n                type=\"button\"\r\n                className=\"btn btn-danger\">\r\n                    <i className=\"fas fa-times\"></i>\r\n                </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\nPostItem.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    addLike: PropTypes.func.isRequired,\r\n    removeLike: PropTypes.func.isRequired,\r\n    deletePost: PropTypes.func.isRequired\r\n}\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth\r\n});\r\n\r\nexport default connect(mapStateToProps, {addLike, removeLike, deletePost})(PostItem);\r\n"]},"metadata":{},"sourceType":"module"}