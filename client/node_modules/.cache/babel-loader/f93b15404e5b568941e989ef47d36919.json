{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_PROFILE, UPDATE_PROFILE, PROFILE_ERROR, CLEAR_PROFILE, DELETE_ACCOUNT } from './types'; //Get current users profile.\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Create and Update a profile\n\nexport const createProfile = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', formData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // ADD EXPERIENCE\n\nexport const addExperience = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/experience', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience added\", 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // ADD EDUCATION\n\nexport const addEducation = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/profile/education', formData, config);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education added\", 'success'));\n    history.push('/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete an experience\n\nexport const deleteExperience = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/experience/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Experience Removed\", 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Delete an education\n\nexport const deleteEducation = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/education/${id}`);\n    dispatch({\n      type: UPDATE_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(\"Education Removed\", 'success'));\n  } catch (err) {\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Delete account and profile\n\nexport const deleteAccount = () => async dispatch => {\n  if (window.confirm('Are you sure? this can not be undone!')) {\n    try {\n      const res = await axios.delete('/api/profile');\n      dispatch({\n        type: CLEAR_PROFILE\n      });\n      dispatch({\n        type: DELETE_ACCOUNT\n      });\n      dispatch(setAlert(\"Account Removed\", 'success'));\n    } catch (err) {\n      dispatch({\n        type: PROFILE_ERROR,\n        payload: {\n          msg: err.response.statusText,\n          status: err.response.status\n        }\n      });\n    }\n  }\n};","map":{"version":3,"sources":["E:/New folder (2)/[FreeCourseSite.com] Udemy -MERN Stack Front To Back Full Stack React, Redux & Node.js/devconnector_S2/client/src/actions/profile.js"],"names":["axios","setAlert","GET_PROFILE","UPDATE_PROFILE","PROFILE_ERROR","CLEAR_PROFILE","DELETE_ACCOUNT","getCurrentProfile","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","createProfile","formData","history","edit","config","headers","post","push","errors","forEach","error","addExperience","put","addEducation","deleteExperience","id","delete","deleteEducation","deleteAccount","window","confirm"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport {setAlert} from './alert';\r\n\r\nimport {\r\n    GET_PROFILE,\r\n    UPDATE_PROFILE,\r\n    PROFILE_ERROR,\r\n    CLEAR_PROFILE,\r\n    DELETE_ACCOUNT\r\n} from './types';\r\n\r\n//Get current users profile.\r\nexport const getCurrentProfile = () => async dispatch => {\r\n    try {\r\n        const res = await axios.get('/api/profile/me');\r\n\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n    } catch (err) {\r\n        dispatch ({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n// Create and Update a profile\r\n\r\nexport const createProfile = (formData, history, edit=false) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.post('/api/profile', formData, config);\r\n        dispatch({\r\n            type: GET_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(edit ? 'Profile Updated' : 'Profile Created', 'success'));\r\n\r\n        if(!edit) {\r\n            history.push('/dashboard');\r\n        }\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch ({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n// ADD EXPERIENCE\r\n\r\nexport const addExperience = (formData,history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.put('/api/profile/experience', formData, config);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(\"Experience added\", 'success'));\r\n        history.push('/dashboard');\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch ({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n}\r\n// ADD EDUCATION\r\n\r\nexport const addEducation = (formData,history) => async dispatch => {\r\n    try {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n        const res = await axios.put('/api/profile/education', formData, config);\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n        dispatch(setAlert(\"Education added\", 'success'));\r\n        history.push('/dashboard');\r\n    } catch (err) {\r\n        const errors = err.response.data.errors;\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\r\n        }\r\n\r\n        dispatch ({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n\r\n//Delete an experience\r\n\r\nexport const deleteExperience = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/experience/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\"Experience Removed\", 'success'));\r\n    } catch (err) {\r\n        dispatch ({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n//Delete an education\r\n\r\nexport const deleteEducation = id => async dispatch => {\r\n    try {\r\n        const res = await axios.delete(`/api/profile/education/${id}`);\r\n\r\n        dispatch({\r\n            type: UPDATE_PROFILE,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(setAlert(\"Education Removed\", 'success'));\r\n    } catch (err) {\r\n        dispatch ({\r\n            type: PROFILE_ERROR,\r\n            payload: { msg: err.response.statusText, status: err.response.status }\r\n        });\r\n    }\r\n};\r\n// Delete account and profile\r\nexport const deleteAccount = () => async dispatch => {\r\n    if(window.confirm('Are you sure? this can not be undone!')) {\r\n        try {\r\n            const res = await axios.delete('/api/profile');\r\n    \r\n            dispatch({\r\n                type: CLEAR_PROFILE\r\n            });\r\n            dispatch({\r\n                type: DELETE_ACCOUNT\r\n            });\r\n    \r\n            dispatch(setAlert(\"Account Removed\", 'success'));\r\n        } catch (err) {\r\n            dispatch ({\r\n                type: PROFILE_ERROR,\r\n                payload: { msg: err.response.statusText, status: err.response.status }\r\n            });\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}